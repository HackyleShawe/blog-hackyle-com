<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hackyle.blog.business.mapper.AuthorMapper">

    <resultMap id="BaseResultMap" type="com.hackyle.blog.business.entity.AuthorEntity">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="realName" column="real_name" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
            <result property="gender" column="gender" jdbcType="INTEGER"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="locked" column="is_locked" jdbcType="BIT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="deleted" column="is_deleted" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,nick_name,real_name,
        description,email,phone,
        address,birthday,gender,
        avatar,is_locked,create_time,
        update_time,is_deleted
    </sql>

    <!-- int logicDeleteByIds(@Param("ids") List<Long> idList);-->
    <update id="logicDeleteByIds">
        update tb_author set is_deleted = 1
        <where>
            id in
            <!-- foreach标签：遍历集合 -->
            <!-- collection：指定要遍历的集合 -->
            <!-- item：临时保存当前遍历出的元素，类似于for(int i=0; i<10; i++)中的i -->
            <!-- separator：每个元素之间的分割符 -->
            <!-- open：遍历出的所有结果拼接一个开始字符 -->
            <!-- close：遍历出的所有结果拼接一个结束符 -->
            <foreach collection="idList" item="i" separator=","
                     open="(" close=")" >
                <!-- #{i}: 取出元素 -->
                #{i}
            </foreach>
        </where>
    </update>

</mapper>
